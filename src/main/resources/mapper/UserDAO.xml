<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.model.dao.UserDAO">
  <select id="find" resultType="com.example.demo.model.bean.User">
    SELECT id, account, name, password, address, image, phone, agent, permission from user where account = #{account} and password = #{password}
  </select>
  
  <select id="findAll" resultType="com.example.demo.model.bean.User">
    SELECT id, account, name, password, address, image, phone, agent, permission from user where permission = 0
  </select>
  
  <select id="findByAccount" resultType="com.example.demo.model.bean.User">
    SELECT id, account, name, password, address, image, phone, agent, permission from user where account = #{account}
  </select>
  
  <select id="findMyFollow" resultMap="userFollowMap">
    SELECT u.name, u.id from user u left join followuser fu on u.id = fu.followTo where fu.followFrom = #{userID}
  </select>
  
  <select id="findSearch" resultType="com.example.demo.model.bean.User">
    SELECT id, account, name, password, address, image, phone, agent, permission from user where account like '%${keyword}%' or name like '%${keyword}%'
  </select>
  
  <resultMap id="userFollowMap" type="com.example.demo.model.bean.User">
		<id property="id" column="id"></id>
		<result property="account" column="account"></result>
		<result property="name" column="name"></result>
		<result property="password" column="password"></result>
		<result property="image" column="image"></result>
		<result property="agent" column="agent"></result>
		<result property="phone" column="phone"></result>
		<result property="address" column="address"></result>
		<association property="followuser" column="id" javaType="com.example.demo.model.bean.Followuser">
			<id property="id" column="id"></id>
			<result property="followFrom" column="followFrom"></result>
			<result property="followTo" column="followTo"></result>
		</association>
	</resultMap>
  
  <insert id="create" parameterType="com.example.demo.model.bean.User">
    INSERT into user(account, password, name, agent, phone, address) VALUES(#{account}, #{password}, #{name}, #{agent}, #{phone}, #{address})
  </insert>
  
  <delete id="remove" parameterType="com.example.demo.model.bean.User">
    DELETE FROM user where id = #{userID}
  </delete>
  
  <update id="updatePassword" parameterType="com.example.demo.model.bean.User">
    UPDATE user set password = #{password} where id = #{userID}
  </update>
</mapper>